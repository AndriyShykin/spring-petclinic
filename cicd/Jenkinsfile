pipeline {
  agent none
  environment {
    APP_NAME = 'spring-petclinic'
    DOCKER_HOST = 'https://172.31.18.232:2375'
    AWS_CRED_ID='jenkins-aws'
    AWS_ACCOUNT_ID = '975049956464'
    AWS_REGION = 'eu-north-1'
    URL_REGISTRY = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
  }
  stages {
    stage('Build App') {
      options {
        timeout(time: 300, unit: 'SECONDS')
      }
      when {
        allOf {
          anyOf {
            changeset "src/main/**"
            triggeredBy 'UserIdCause'
          }
          expression {
            env.BRANCH_NAME in ['main', 'test']
          }
        }
      }
      agent {
        dockerContainer {
          image 'shykin/alpine:4f5d8d5570d3e29e68d4a5c8e77c532607009f7a'
        }
      }
      steps {
        sh 'mvn -B package'
        stash includes: '**/target/*.jar', name: 'package'
        archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml'
        }
      }
    }
stage('Build Image') {
      options {
        timeout(time: 300, unit: 'SECONDS')
      }
      when {
        allOf {
          anyOf {
            changeset "src/main/**"
            triggeredBy 'UserIdCause'
          }
          expression {
            env.BRANCH_NAME in ['main', 'test']
          }
        }
      }
      agent {
        dockerContainer {
          image 'shykin/alpine:4f5d8d5570d3e29e68d4a5c8e77c532607009f7a'
        }
      }
      steps {
        withAWS(region: AWS_REGION, credentials: AWS_CRED_ID) {
          unstash 'package'
          sh 'cp target/*.jar ./app.jar'
          sh 'docker build -f ./cicd/Dockerfile -t $APP_NAME .'
          sh 'aws sts get-caller-identity'
          archiveArtifacts artifacts: 'image.txt', fingerprint: true
        }
      }
    }
  }
}
