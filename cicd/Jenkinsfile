pipeline {
  agent none
  environment {
    APP_NAME = 'spring-petclinic'
    DOCKER_HOST = 'https://172.31.18.232:2375'
    REGISTRY_SECRET_ID = 'dockerhub'
  }
  stages {
    stage('Build App') {
      options {
        timeout(time: 300, unit: 'SECONDS')
      }
      when {
        allOf {
          anyOf {
            changeset "src/main/**"
            triggeredBy 'UserIdCause'
          }
          expression {
            env.BRANCH_NAME in ['main', 'test']
          }
        }
      }
      agent {
        dockerContainer {
          image 'shykin/maven:00b2b58a6de794d60956e593e42c832a0ebf5437'
        }
      }
      steps {
        sh 'mvn -B package'
        stash includes: '**/target/*.jar', name: 'package'
        archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml'
        }
      }
    }
stage('Build Image') {
      options {
        timeout(time: 300, unit: 'SECONDS')
      }
      when {
        allOf {
          anyOf {
            changeset "src/main/**"
            triggeredBy 'UserIdCause'
          }
          expression {
            env.BRANCH_NAME in ['main', 'test']
          }
        }
      }
      agent {
        dockerContainer {
          image 'shykin/aws-docker-jre:50a86e59ec85c68785b072c0c2e69cc448b4e602'
        }
      }
      steps {
        withCredentials([usernamePassword(credentialsId: REGISTRY_SECRET_ID, usernameVariable: 'REGISTRY_USER', passwordVariable: 'REGISTRY_PASSWORD')]) {
          unstash 'package'
          sh 'echo "{\\\"auths\\\":{\\\"$IMAGE_REGISTRY\\\":{\\\"auth\\\":\\\"$(echo -n $REGISTRY_USER:$REGISTRY_PASSWORD | base64)\\\"}}}" > /kaniko/.docker/config.json'
          sh 'cp target/*.jar cicd/app.jar'
          sh 'docker build -t $REGISTRY_USER/$APP_NAME-$BRANCH_NAME:$GIT_COMMIT .'
          archiveArtifacts artifacts: 'image.txt', fingerprint: true
        }
      }
    }
  }
}
