pipeline {
  agent none
  environment {
    APP_NAME = 'spring-petclinic'
    REGISTRY_SECRET_ID = 'dockerhub'
  }
  stages {
    stage('Build App') {
      options {
        timeout(time: 300, unit: 'SECONDS')
      }
      when {
        allOf {
          anyOf {
            changeset "src/main/**"
            triggeredBy 'UserIdCause'
          }
          expression {
            env.BRANCH_NAME in ['main', 'test']
          }
        }
      }
      agent { dockerContainer { image 'shykin/maven:00b2b58a6de794d60956e593e42c832a0ebf5437' } }
      steps {
        sh 'mvn -B package'
        stash includes: '**/target/*.jar', name: 'package'
        archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml'
        }
      }
    }
stage('Build Image') {
      options {
        timeout(time: 300, unit: 'SECONDS')
      }
      when {
        allOf {
          anyOf {
            changeset "src/main/**"
            triggeredBy 'UserIdCause'
          }
          expression {
            env.BRANCH_NAME in ['main', 'test']
          }
        }
      }
      agent { dockerContainer { image 'shykin/kaniko:c2b61b916a6dc7eb8dd2ff25d3ae8111c7a8a741' } }
      steps {
        withCredentials([usernamePassword(credentialsId: REGISTRY_SECRET_ID, usernameVariable: 'REGISTRY_USER', passwordVariable: 'REGISTRY_PASSWORD')]) {
          unstash 'package'
          sh 'echo "{\\\"auths\\\":{\\\"$IMAGE_REGISTRY\\\":{\\\"auth\\\":\\\"$(echo -n $REGISTRY_USER:$REGISTRY_PASSWORD | base64)\\\"}}}" > /kaniko/.docker/config.json'
          sh 'cp target/*.jar cicd/app.jar'
          sh '/kaniko/executor --context cicd --dockerfile cicd/Dockerfile --destination $REGISTRY_USER/$APP_NAME-$BRANCH_NAME:latest --destination $REGISTRY_USER/$APP_NAME-$BRANCH_NAME:$GIT_COMMIT --image-name-tag-with-digest-file image.txt'
          archiveArtifacts artifacts: 'image.txt', fingerprint: true
        }
      }
    }
  }
}
